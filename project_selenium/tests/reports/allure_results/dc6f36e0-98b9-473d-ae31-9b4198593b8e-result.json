{"name": "test_user_login[user1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_login.TestLogin object at 0x04E71330>\nuser = {'customer_name': 'Customer099', 'password': 'abc123', 'product_name': '美国空运', 'username': 'testuser1'}\n\n    @pytest.mark.parametrize(\"user\", load_csv_data(\"users.csv\"))\n    def test_user_login(self, user):\n        \"\"\"\n        多用户登录测试，使用 CSV 中的数据驱动。\n        user 是字典，包含 username 和 password\n        \"\"\"\n        login_page = LoginPage(self.driver)\n    \n        start_time = time.time()\n>       login_page.login_with_credentials(user[\"username\"], user[\"password\"])\n\ntest_login.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:70: in login_with_credentials\n    WebDriverWait(self.driver, 10).until_not(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2cfdb2a9bda5f867577b624a5918de0d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x04EAC3E8>\nmessage = ''\n\n    def until_not(self, method: Callable[[D], T], message: str = \"\") -> Union[T, Literal[True]]:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return False within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> is_disappeared = wait.until_not(EC.visibility_of_element_located(\n        ... (By.ID, \"exampleId\")))\n        \"\"\"\n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if not value:\n                    return value\n            except self._ignored_exceptions:\n                return True\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python312-32\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:195: TimeoutException"}, "description": "\n        多用户登录测试，使用 CSV 中的数据驱动。\n        user 是字典，包含 username 和 password\n        ", "attachments": [{"name": "log", "source": "a6309cbd-71fe-41cf-b303-7224f3145308-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "user", "value": "{'username': 'testuser1', 'password': 'abc123', 'customer_name': 'Customer099', 'product_name': '美国空运'}"}], "start": 1755065092985, "stop": 1755065104426, "uuid": "5e830b5d-f220-4168-a14a-bf4aefc4e85d", "historyId": "22fefa92c512a9856af1d5d6d6595b3f", "testCaseId": "0edf0a627e33dcf0062a7d9e3e848ac1", "fullName": "tests.test_login.TestLogin#test_user_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-I66F8NN"}, {"name": "thread", "value": "12656-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}