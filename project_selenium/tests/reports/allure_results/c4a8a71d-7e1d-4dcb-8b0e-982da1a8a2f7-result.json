{"name": "test_create_order[user0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'ForecastPage' object has no attribute 'LOADING_MASK'", "trace": "self = <tests.test_order.TestOrder object at 0x04EFD4E0>\nuser = {'customer_name': '客户0730', 'password': 'abc123456', 'product_name': '美森正班超大件', 'username': 'alltester_勿动'}\n\n    @pytest.mark.parametrize(\"user\", load_csv_data(\"users.csv\"))\n    def test_create_order(self, user):\n        \"\"\"\n        多用户创建预报单测试，使用 CSV 中的数据驱动。\n        user 是字典，包含 username、password、customer_name、product_name\n        \"\"\"\n        # 1. 登录\n        login_page = LoginPage(self.driver)\n        start_time = time.time()\n        login_page.login_with_credentials(user[\"username\"], user[\"password\"])\n        login_elapsed = time.time() - start_time\n    \n        assert login_page.is_welcome_shown(user[\"username\"]) is True\n        print(f\"用户 {user['username']} 登录耗时: {login_elapsed:.2f}秒\")\n    \n        # 2. 创建预报单\n        order_page = ForecastPage(self.driver)\n        file_path = r\"D:\\project_selenium_improve\\tests\\16箱.xlsx\"\n    \n        start_time = time.time()\n>       order_page.create_order(\n            file_path=file_path,\n            customer_name=user[\"customer_name\"],\n            product_name=user[\"product_name\"]\n        )\n\ntest_order.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.order_page.ForecastPage object at 0x04F09D50>\nfile_path = 'D:\\\\project_selenium_improve\\\\tests\\\\16箱.xlsx'\ncustomer_name = '客户0730', product_name = '美森正班超大件'\n\n    def create_order(self,file_path,customer_name,product_name):\n        \"\"\"\n        创建预报单流程\n        :param file_path: 上传的Excel文件路径\n        :param customer_name: 选择的客户名称\n        :param product_name: 选择的销售产品\n        \"\"\"\n    \n        self.logger.info(f\"开始创建预报单，客户: {customer_name}，产品: {product_name}\")\n    \n        # 1. 点击预报|入单 （模块处)\n        try:\n            self.wait.until(EC.element_to_be_clickable(self.FORECAST_ENTRY_BUTTON)).click()\n            self.logger.info(\"点击 预报|入单按钮\")\n        except Exception as e:\n            self.logger.error(f\"预报|入单 模块 失败: {e}\")\n            self._take_screenshot(\"预报入单_page_failed\")\n            raise\n    \n        # 2. 点击预报下单\n        try:\n            self.wait.until(EC.element_to_be_clickable(self.FORECAST_ORDER_BUTTON)).click()\n            self.logger.info(\"点击 预报下单按钮，进入预报下单页面\")\n        except Exception as e:\n            self.logger.error(f\"进入预报下单 页面 失败: {e}\")\n            self._take_screenshot(\"Enter_forecast_order_page_failed\")\n            raise\n    \n        # 3.点击上传按钮并上传文件\n        try:\n            #self.wait.until(EC.element_to_be_clickable(self.UPLOAD)).click()\n            #file_input = self.wait.until(EC.presence_of_element_located(self.EXCEL_UPLOAD))\n    \n            file_input = self.wait.until(EC.presence_of_element_located(self.EXCEL_UPLOAD))\n    \n            # 如果 input 被隐藏，先通过 JS 显示\n            self.driver.execute_script(\"arguments[0].style.display = 'block';\", file_input)\n    \n            file_input.send_keys(file_path)\n            self.logger.info(f\"上传文件: {file_path}\")\n        except Exception as e:\n            self.logger.error(f\"上传文件失败: {e}\")\n            self._take_screenshot(\"step_upload_file_failed\")\n            raise\n    \n        # 2. 等待遮罩层消失\n        try:\n>           self.wait.until_not(EC.presence_of_element_located(self.LOADING_MASK))\nE           AttributeError: 'ForecastPage' object has no attribute 'LOADING_MASK'\n\n..\\pages\\order_page.py:80: AttributeError"}, "description": "\n        多用户创建预报单测试，使用 CSV 中的数据驱动。\n        user 是字典，包含 username、password、customer_name、product_name\n        ", "attachments": [{"name": "log", "source": "160d560b-fba5-404e-8483-a19cf95ea9e4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "user", "value": "{'username': 'alltester_勿动', 'password': 'abc123456', 'customer_name': '客户0730', 'product_name': '美森正班超大件'}"}], "start": 1755071235322, "stop": 1755071242490, "uuid": "ce49eb11-da02-4528-be9b-277101049cf3", "historyId": "bf9cef801c5dfb695dc07871e042306f", "testCaseId": "b0fdcacb323511d8194c939b7ce8433a", "fullName": "tests.test_order.TestOrder#test_create_order", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "DESKTOP-I66F8NN"}, {"name": "thread", "value": "19644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}